clear all;
clc;


%% add all files to path
addpath(genpath('./..'));

%% Settings for running the model

% 5 hosts 5 phages and 70ish number of boxes. Will change this later.
model = SEIV_diff_NE(5,5,70);
model.host_growth = 0;
model.viral_decay = 0;
model.viral_adsorb = 0;
model.lysis_reset = 0;
model.debris_inhib = 2;



% which of the variables to include in the inference process
include_pars = {'r','beta','phi','epsilon','tau'};

% if we want to include debris
if (model.debris_inhib == 1 || model.debris_inhib == 2 || model.debris_inhib == 3)
    include_pars{end+1} = 'Dc';
end

%if we want to include lysis reset -- for the paper not included
if model.lysis_reset == 1
    include_pars{end+1} = 'epsilon_reset';
end

%just some settings for the inference process: do not change these
flags.phi_entire_matrix = 0;
flags.ssfun_normalized = 0;
flags.tau_mult = 1;
flags.mcmc_algorithm = 1; % default is 1 ('dram')
flags.inference_script = 1;
flags.confidence_interval = 0;
flags.tau_new = 0;

% a seed is set just to check the code
seed = 903525816;

% keeping it low so the code at least runs.
mcmcoptions.nsimu = 100; 

% keeping the full chain, just for demo purposes of code review.
transient_id = 1;

%the regularizer in cost function was not used.
lambda = 0;

%% load the data, parameters etc.

%note: the datapath is already added, if it doesn't work (depending on your matlab version), just add the
%paths.
load('data/qpcr','data'); % qpcr data
load('data/parameters_example','pars'); % parameters without nans
pars1 = pars;
load('data/parameters'); % true parameter set with nans

% fixing number of compartments: obtained from one-step-inference.
pars.NE = 10*(pars.M == 1); 
pars.NE(1,2) = 63;
pars.NE(2,1) = 75;
pars.NE(2,2) = 69;
pars.NE(2,3) = 70;
pars.NE(3,3) = 68;
pars.NE(4,4) = 75;
pars.NE(4,5) = 98;
pars.NE(5,4) = 87;
pars.NE(5,5) = 109;

pars1.NE = pars.NE; %pars1 was historically created to deal with cases where there was missing values, 
% do not worry about this for code-review now pars and pars1 are the same


% controlling settings for debris inhibition
if (model.debris_inhib == 1 || model.debris_inhib == 2 || model.debris_inhib == 3)
    %pars1.Dc = 1e8;
    %pars1.Dc = 4389100;
    pars1.Dc = 3.9e6;
    pars_labels.Dc = "";
    pars_units.Dc = "1/ml";
end


% controlling settings for lysis reset (not used) 
if model.lysis_reset == 1
    pars1.epsilon_reset = 0.01;
    pars_labels.epsilon_reset = "";
    pars_units.epsilon_reset = "";
end

% finally fix the model with given number of boxes.
max_NE = round(max(max(pars.NE)));
model = SEIV_diff_NE(5,5,max_NE);
model.host_growth = 0;
model.viral_decay = 0;
model.viral_adsorb = 0;
model.lysis_reset = 0;
model.debris_inhib = 2;


% this was used to modify latent periods to be longer, is not used, ignore
% for code review - the multiplication factor was set to 1 anyway.
pars1.tau = pars1.tau*flags.tau_mult;

% a change of variable was done to test inference priors, not needed for code review
pars1.eta(pars1.tau>0) = 1./pars1.tau(pars1.tau>0);



%% SEIVD -- load good priors

% I have better priors, i.e, some parameter values stored. Let us just load
% those parameters from the file -- which was obtained after approximate
% convergence.

% If I do not do this, you would not have good starting parameter values
% during the code review process.

% I am just giving you a posterior value from inference as a demo prior

load('./../res/inference_results/SEIVD_datasheet','pars2');

pars = pars2;
pars1 = pars2;
clear pars2;

%% plotting an example fit.

tvec = 0:0.05:15.75; % for better viz
[t1,S1,V1,D1] = simulate_ode(model,pars1,tvec,pars1.S0,pars1.V0); % initial parameter set

figure(1)
for i=1:model.NH
plot(data.xdata,data.ydata(:,i),'*');hold on;plot(t1,S1(:,i),'-',LineWidth=2); %microbes
xlabel('Time (hours)');ylabel('Host (cells/ml)');set(gca,'Yscale','log'); ylim([1e5 1e8])
%title(['Points are from averaged experimental datasets, line is from simulated SEIV model' ...
    %' (N_E=10)'])
end

figure(2)
for i=1:model.NV
plot(data.xdata,data.ydata(:,i+5),'*');hold on;plot(t1,V1(:,i),'-',LineWidth=2); %virus
xlabel('Time (hours)');ylabel('Phage (cells/ml)');set(gca,'Yscale','log');
%title('Points are from averaged experimental datasets, line is from simulated SEIV model (N_E=10)')
end

%% now an example of inference
% do not run this locally if mcmcoptions.nsimu > 1000

if flags.ssfun_normalized==0
	ssfun = @loglikefun;
elseif flags.ssfun_normalized==1
	ssfun = @loglikefun_normalized;
end

% which mcmc algorithm to use
% default value is 1 ('dram');
mcmcmethods = {'dram','am','dr', 'ram','mh'};
mcmcoptions.method = mcmcmethods{flags.mcmc_algorithm};
clear mcmcmethods;



mcmcpars = mcmcpars_setup(pars,pars1,include_pars,flags,model);
mcmcparam = mcmcpars2param(mcmcpars);
mcmcmodel.ssfun = @(theta,data) ssfun(theta,data,pars1,mcmcpars,model,lambda); 
[mcmcresults, chain, s2chain]= mcmcrun(mcmcmodel,data,mcmcparam,mcmcoptions);

 fprintf('simulating timeseries...\n');
%pars_from_dist = @(chain) mean(chain);
pars_from_dist = @(chain) median(chain);
pars2 = update_pars(pars1,pars_from_dist(chain(transient_id:end,:)),mcmcpars);
tvec = 0:0.05:15.75; % for better viz
[t2,S2,V2,D2] = simulate_ode(model,pars2,tvec,pars2.S0,pars2.V0); % mcmc parameter set
clear tvec;


% 
figure(3)
for i=1:5
plot(data.xdata,data.ydata(:,i),'*');hold on;plot(t2,S2(:,i),'-',LineWidth=2); %microbes
xlabel('Time (hours)');ylabel('Host (cells/ml)');set(gca,'Yscale','log'); ylim([1e5 1e8])
title(['Points are from averaged experimental datasets, line is from simulated SEIV model' ...
    ' (N_E=10)'])
end

figure(4)
for i=1:5
plot(data.xdata,data.ydata(:,i+5),'*');hold on;plot(t2,V2(:,i),'-',LineWidth=2); %virus
xlabel('Time (hours)');ylabel('Phage (cells/ml)');set(gca,'Yscale','log');
title('Points are from averaged experimental datasets, line is from simulated SEIV model (N_E=10)')
end

% at this point if you plot the chain you might just see straight lines
% with no variation -- that's okay -- as no samples were accepted.



%% finding confidence intervals

% WARNING -- DO NOT RUN THIS LOCALLY!! 
% IGNORE THIS FOR CODE REVIEW IF YOU LOVE YOUR TIME


% I have turned this off now, by flags.confidence_interval = 0


if flags.confidence_interval == 1
    load('./../res/inference_results/SEIVD_datasheet','chain'); %loading an actual chain
    transient_id_new = 1;
    confidence_interval = 0.95;
    [S_min,S_max,V_min,V_max] = find_confidence_intervals(chain,transient_id_new,mcmcpars,confidence_limit,model, pars2);
end

%% actual inference results after the pipeline.

% the inference process takes a long time, so we are just going to load the
% actual results after the inference.
%loading all the results.

clear all;
load('./../res/inference_results/SEIVD_datasheet');

%% some initial inference statistics 

if mcmcoptions.nsimu > 2
    figure_mcmc2
else
    sprintf("You have not run the chain, so can't plot the chain statistics.");
end


%%

